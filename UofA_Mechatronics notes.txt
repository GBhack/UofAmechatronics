								UofA Mechatronics project
==========================================================================================

groups : 

	Analog of digital converter : 
	Data Management: 
	Data Processing: 
	Data Reading: 
	Data Storage: 
	Hardware: 
	Managers: 
	
	
=========================================================================================
								Tasks for 1st weekend | Data to give them

Analog to digital converter:
	
	Pages to read on the A/D PIC16F690 : Analog to digital converter chapter in data sheet: p109-120
		goal is to understand how the built in A/D works, who to program it etc...
		look for : how the A/D operates, (conversion cycles, output format, conversion time, special events, interrupts, conversion termination...)
		understanding the role of the dedicated registers, note down the ones most probably need for quicker access to the info later.
		look through and understand the example page 114.
		look at the acquisition requirements, is there a specific way to wire the analog input the hardware team should know about?
		strongly recommend to take down notes of the important and useful information to have it quickly available when working on the A/DC. 
	
Hardware :
    Your first task is absolutely essential as it will set the basis for other groups: you need to come up with a list of components for the project.
    The first thing you'll need to do is refer to the specifications of the project which states that we MUST use a PIC16F690, an accelerometer with analog output and serial EEPROM.
    Then you'll have to have a look on what exists out-here in term of components. I suggest having a look on digikey.com, mouser.com or even Adafruit.com or sparfun.com.
    You'll find out that those components have a range of specifications and you'll have to set a value for those. For instance: do you need a +/-2g accelerometer or a +/-16g ?
    Keep in mind that the core of the project is the PIC and that it has electrical specifications... 
    We need you to come tu us by Friday at midnight with a list of components, being totally sure about them fulfilling all the requirements and able to provide them on time (ie less than 8 days).
    
	- Guidelines to list of components: 
				- what? 
				- Quick requirement list for each component.
				- Important stuff to look for (ex: max operation voltage)
	-> Goal: learn what to look for with each component, what data to compare, what does that change in
			 how if works. 
			 
Data management : 
	- Detailed description of role in the project: 
		Make sure the data flows correctly from the sensor to the EEPROM
		De sure that all different conversion steps are well understood by involved parties to prevent i/o incompatibilities.
		be the boss of the discussion process that leads to choosing the data format at each step (A/D, progressing, storage).
		take care of setting the format the data will be in in the serial communications, basicly in charge of the data when it's in copper wires.
	
	- First tasks:
		Read through the PIC16F690 DATASHEET to learn about serial communications (chapter 12), "Important to do fast !!! the data Storage team need it to
		start work on their i/o requirements!"
			look for the serial data format, how is it used (necessary to give instructions to the data storage and recovery teams for their programming)
			prepare the first "data management" meeting that'll take place on Monday with the data storage and recovery teams.
				Meeting title : understanding everyone's needs, hardware/software based restrictions, establishing a data flow chart.
			 
Team Data Post-Processing : 
	- role in the project
		Figure out a way to translate the recovered data into Matlab plots which can be interpreted.
		
	- first tasks:
		Find out how to convert binary data into easily comparable data, create a standardised Matlab input format and communicate it to the data recovery 
		team so they know what output they must have. please share your solution with us. 
		
	- Second task:
		Once your input data is defined write the Matlab program which read the data, 
		conduct math to get velocity and position from acceleration, 
		plot results in an easily readable format
		
		
Team Storage
	Core programming on the PIC, need to deliver an assembly code which gets the digital output from the A/Dc to the EEPROM memory.
	
	- first task:
		Read all data sheets and communicate with the other groups to familiarise yourself with the inner-workings of the PIC, EEPROM and serial communications to get stated on the code.
		
	- Task 2:
		code
	
	- task 3: 
		debug
		
		
		
		
		
		
		
		Once acceleration data has been saved on the EEPROM this team will figure out a way to read it to a PC through the PIC 
	https://app.smartsheet.com/b/publish?EQBCT=1b6af1bde5b94ade85b39961ceb5b79a